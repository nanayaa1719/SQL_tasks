-- Intermediate SQL Queries: Expanding Skills
-- Author: Nana Yaa Dadzie
-- Description: Intermediate SQL queries demonstrating JOINs, subqueries, and CASE statements

-- Creating another table for joining
CREATE TABLE departments (
    department_id SERIAL PRIMARY KEY,
    department_name VARCHAR(50)
);

-- Inserting sample data
INSERT INTO departments (department_name) VALUES
('HR'),
('IT'),
('Finance');

-- Updating employees table to include department_id
ALTER TABLE employees ADD COLUMN department_id INT;

-- Updating employee department assignments
UPDATE employees
SET department_id = (CASE
    WHEN department = 'HR' THEN 1
    WHEN department = 'IT' THEN 2
    WHEN department = 'Finance' THEN 3
    ELSE NULL
END);

-- INNER JOIN example
SELECT e.first_name, e.last_name, d.department_name
FROM employees e
INNER JOIN departments d ON e.department_id = d.department_id;

-- LEFT JOIN example
SELECT e.first_name, e.last_name, d.department_name
FROM employees e
LEFT JOIN departments d ON e.department_id = d.department_id;

-- Using a subquery to find employees with salary above the department average
SELECT first_name, last_name, salary, department
FROM employees e
WHERE salary > (SELECT AVG(salary) FROM employees WHERE department = e.department);

-- CASE statement example
SELECT first_name, last_name, salary,
       CASE
           WHEN salary < 60000 THEN 'Low'
           WHEN salary BETWEEN 60000 AND 75000 THEN 'Medium'
           ELSE 'High'
       END AS salary_category
FROM employees;
